#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define SYM_L   1
#define NAV_L   2
#define NAV2_L  3

//#define OTHER_L 4

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define SYMBOL  3

// Desktop and tab navigation shortcuts		

#define DESKTOP_LT   LC(LG(LEFT))
#define DESKTOP_RT   LC(LG(RIGHT))
#define WINDOW_LT    LA(LS(TAB))
#define WINDOW_RT    LA(TAB)
#define TAB_LT       LC(LS(TAB))
#define TAB_RT       LC(TAB)

// NOT USED  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
// Generic bindings

#define KILL_WINDOW  LA(F4)
#define MAXIMIZE     LG(UP)
#define MINIMIZE     LG(DOWN)
#define UN_MINIMIZE  LG(LC(N))

&lt {
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        fNum {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    macros {
        ZMK_MACRO(inv_qm,

        wait-ms = <10>;
        tap-ms = <10>;
        bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>,
            <&macro_release &kp LALT>;

        )
    };

    behaviors {
        //   td_mt_ls: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_LSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
        //   };
        //   td_mt_rs: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_RSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt RSHIFT CAPSLOCK>, <&kp RCTRL>;
        //   };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS  &kp EQUAL  &kp DELETE  &kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NUBS  &mo 1  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp ENTER  &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp SLASH  &kp RIGHT_SHIFT  &kp LCTRL  &kp LWIN  &kp LALT  &mo 3  &lt 3 SPACE  &kp BACKSPACE  &none  &kp RIGHT_ALT  &kp RWIN  &mo 2  &kp RIGHT_CONTROL
            >;
        };

        util {
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp DELETE  &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &trans  &kp INSERT  &kp HOME  &kp UP  &kp END  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_PREV  &kp C_NEXT  &kp C_PP  &trans  &kp PG_UP  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &kp F13  &kp F14  &kp F15  &trans  &kp PG_DN  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp BACKSPACE  &kp ENTER  &trans  &trans  &trans  &trans  &trans
            >;
        };

        settings {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bootloader  &trans  &trans  &out OUT_USB  &out OUT_BLE  &trans  &trans  &bootloader  &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N7  &kp N8  &kp N9  &kp EQUAL  &trans  &trans  &kp LPAR  &kp RPAR  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp MINUS  &trans  &kp SQT  &kp LBRC  &kp RBRC  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0  &trans  &kp NUBS  &kp LBKT  &kp RIGHT_BRACKET  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        fnum {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
